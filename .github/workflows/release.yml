name: Release

on:
    # Allows you to run this workflow manually from the Actions tab or through HTTP API
    workflow_dispatch:

    push:
        tags:
            - "v*.*.*" # Trigger only on version tags

jobs:
    build:
        strategy:
            fail-fast: false
            matrix:
                # os: [ubuntu-latest, macos-latest, windows-latest]
                # arch: [x64, ia32]
                include:
                    - os: ubuntu-latest
                      arch: x64
                    # - os: ubuntu-latest # BUG: This one doesn't work.
                    #   arch: ia32
                    - os: ubuntu-latest
                      arch: arm64
                    - os: ubuntu-latest
                      arch: armv7l
                    - os: macos-latest
                      arch: x64
                    # - os: macos-latest # BUG: This one doesn't work.
                    #   arch: ia32
                    - os: macos-latest
                      arch: arm64
                    # - os: macos-latest # BUG: This one doesn't work.
                    #   arch: armv7l
                    - os: windows-latest
                      arch: x64
                    - os: windows-latest
                      arch: ia32
                      node-version: 22.x
                    # - os: windows-11-arm # Disabled because Windows arm64 can run x64 apps.
                    #   arch: arm64
                    # - os: windows-latest # BUG: This one doesn't work.
                    #   arch: armv7l
        runs-on: ${{ matrix.os }}
        name: Build ${{ matrix.os }} (${{ matrix.arch }})
        permissions: write-all
        steps:
            - name: Checkout code
              uses: actions/checkout@v3

            - name: Setup Node.js
              uses: actions/setup-node@v3
              with:
                  node-version: ${{ matrix.node-version || '24.x' }}

            - name: Install dependencies
              # Add `--ignore-scripts` because leveldb-zlib's install script is broken, so it is ignored and then fixed with the next step before being run.
              run: npm install # --ignore-scripts
              env:
                  LEVELDB_ZLIB_ARCH_OVERRIDE: ${{ matrix.arch }}

            # - name: Build leveldb-zlib binaries
            #   run: npm run build-leveldb-zlib

            # - name: Make distributables
            #   run: npm run make -- --dry-run --arch="${{ matrix.arch }}"

            - name: Publish to GitHub Releases
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                  NODE_OPTIONS: --max-old-space-size=4096
                  LEVELDB_ZLIB_ARCH_OVERRIDE: ${{ matrix.arch }}
              run: npm run publish -- --arch="${{ matrix.arch }}"

            - name: Debug (Windows)
              if: always() && matrix.os == 'windows-latest'
              run: dir -r out

            - name: Debug (Non-Windows)
              if: always() && matrix.os != 'windows-latest'
              run: find out
